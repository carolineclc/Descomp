LDI $0
STA @288
STA @289
STA @290
STA @291
STA @292
STA @293
STA @256
STA @257
STA @258
STA @511 #LIMPA FLAG DO BOTAO KEY0
STA @510 #LIMPA FLAG DO BOTAO KEY1
STA @0 #ARMAZENA O VALOR DO ACUMULADOR EM MEM[0] (UNIDADES)
STA @1 #ARMAZRNA O VALOR DO ACUMULADOR EM MEM [1] (DEZENAS)
STA @2 #ARMAZENA O VALOR DO ACUMULADOR EM MEM [2] (CENENAS)
STA @5 #ARMAZENA O VALOR DO ACUMULADOR EM MEM [5] (FLAG UNIDADE)
STA @6 #ARMAZENA O VALOR DO ACUMULADOR EM MEM [6] (LIMITE)
STA @7 #ARMAZENA O VALOR DO ACUMULADOR EM MEM [7] (FLAG LIMITE)
STA @3 # CONSTANTE 0
LDI $1
STA @4 #CONSTANTE 1
LDA @353 #LE O VALOR DO BOTAO DE  KEY0
CEQ @3 #COMPARA SE O VALOR DE KEY0 IGUAL A 0
JEQ @cont #SE KEY0 NAO FOI PRESSIONADO CONTUNA NO LACO
JSR @incremento #SE KEY0 FOI PRESSIONADO ENTRA NA SUBROTINA DE INREMENTO
JSR @ display
LDA @352 #LE O VALOR DO BOTAO DE  KEY1
CEQ @3 #COMPARA SE O VALOR DE KEY0 IGUAL A 0
JEQ @cont #SE KEY1 NAO FOI PRESSIONADO VOLTA PARA O INICIO
JSR @limite #SE KEY0 FOI PRESSIONADO ENTRA NA SUBROTINA DE INREMENTO
LDA @6 #PEGA VALOR DE LIMITE
STA @290 #DISPLAY VALOR DE LIMITE EM HEX2
LDA @0 #PEGA O VALOR DAS UNIDADES
CEQ @6 #COMPARA COM O VALOR DO LIMITE
JEQ @final #SE FOR IGUAL VAI NO FINAL
LDA @356 #PEGA O VALOR DO BOTAO FPGA RESET
CEQ @3 #COMPARA SE O VALOR DE FPGA RESET FOI PRESSIONADO
JEQ @cont3 #SE O BOTAO NAO FOI PRESSIONADO CONTINUA NO LACO
JSR @limpeza #SE O BOTAO FOI PRESSIONADO ELE FAZ A LIMPEZA DAS VARIAVEIS
JMP @inicio
LDA @3
STA @510 #LIMPA A FLAG DO BOTAO KEY0
LDA @4 #ARMAZENA A CONSTANTE NO REGISTRADOR
SOMA @0 #SOMA A CONSTANTE NO VALOR DAS UNIDADES
STA @0 #ARMAZENA O NOVO VALOR NAS UNIDADES
RET
LDA @320 #PEGA OS VALORES DA CHAVE
STA @6 #ARMAZENA NA VARIAVEL DE MEM[6]
LDI $1 #CONSTANTE 1
STA @257 #ACENDE LED8 INDICANDO QUE LIMITE FOI DEFINIDO
RET
LDA @0 #PEGA O VALOR DAS UNIDADES
STA @288 #ESCREVE O VALOR NO DISPLAY HEX0
RET
LDI $1
STA @258 #ACENDE LED9 INDICANDO QUE LIMITE FOI ATINGIDO
JMP @inicio
